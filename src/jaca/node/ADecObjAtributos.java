/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.node;

import jaca.analysis.*;

@SuppressWarnings("nls")
public final class ADecObjAtributos extends PAtributos
{
    private PDecObj _decObj_;
    private PAtributos _atributos_;

    public ADecObjAtributos()
    {
        // Constructor
    }

    public ADecObjAtributos(
        @SuppressWarnings("hiding") PDecObj _decObj_,
        @SuppressWarnings("hiding") PAtributos _atributos_)
    {
        // Constructor
        setDecObj(_decObj_);

        setAtributos(_atributos_);

    }

    @Override
    public Object clone()
    {
        return new ADecObjAtributos(
            cloneNode(this._decObj_),
            cloneNode(this._atributos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecObjAtributos(this);
    }

    public PDecObj getDecObj()
    {
        return this._decObj_;
    }

    public void setDecObj(PDecObj node)
    {
        if(this._decObj_ != null)
        {
            this._decObj_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decObj_ = node;
    }

    public PAtributos getAtributos()
    {
        return this._atributos_;
    }

    public void setAtributos(PAtributos node)
    {
        if(this._atributos_ != null)
        {
            this._atributos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atributos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decObj_)
            + toString(this._atributos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decObj_ == child)
        {
            this._decObj_ = null;
            return;
        }

        if(this._atributos_ == child)
        {
            this._atributos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decObj_ == oldChild)
        {
            setDecObj((PDecObj) newChild);
            return;
        }

        if(this._atributos_ == oldChild)
        {
            setAtributos((PAtributos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
