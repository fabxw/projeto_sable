/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.node;

import jaca.analysis.*;

@SuppressWarnings("nls")
public final class AMenorIgualQueExpAux extends PExpAux
{
    private PExp _exp_;
    private TMenorIgualQue _menorIgualQue_;
    private PExpFinal _expFinal_;

    public AMenorIgualQueExpAux()
    {
        // Constructor
    }

    public AMenorIgualQueExpAux(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TMenorIgualQue _menorIgualQue_,
        @SuppressWarnings("hiding") PExpFinal _expFinal_)
    {
        // Constructor
        setExp(_exp_);

        setMenorIgualQue(_menorIgualQue_);

        setExpFinal(_expFinal_);

    }

    @Override
    public Object clone()
    {
        return new AMenorIgualQueExpAux(
            cloneNode(this._exp_),
            cloneNode(this._menorIgualQue_),
            cloneNode(this._expFinal_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMenorIgualQueExpAux(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TMenorIgualQue getMenorIgualQue()
    {
        return this._menorIgualQue_;
    }

    public void setMenorIgualQue(TMenorIgualQue node)
    {
        if(this._menorIgualQue_ != null)
        {
            this._menorIgualQue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._menorIgualQue_ = node;
    }

    public PExpFinal getExpFinal()
    {
        return this._expFinal_;
    }

    public void setExpFinal(PExpFinal node)
    {
        if(this._expFinal_ != null)
        {
            this._expFinal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expFinal_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._menorIgualQue_)
            + toString(this._expFinal_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._menorIgualQue_ == child)
        {
            this._menorIgualQue_ = null;
            return;
        }

        if(this._expFinal_ == child)
        {
            this._expFinal_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._menorIgualQue_ == oldChild)
        {
            setMenorIgualQue((TMenorIgualQue) newChild);
            return;
        }

        if(this._expFinal_ == oldChild)
        {
            setExpFinal((PExpFinal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
