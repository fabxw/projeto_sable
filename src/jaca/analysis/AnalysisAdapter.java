/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.analysis;

import java.util.*;
import jaca.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramaPrograma(AProgramaPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClasseDefClasse(AClasseDefClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelacaoRelacao(ARelacaoRelacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFamiliaFamilia(AFamiliaFamilia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelacoesRelacoes(ARelacoesRelacoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecObjAtributos(ADecObjAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVarAtributos(ADecVarAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecConsAtributos(ADecConsAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecProcedMetodos(ADecProcedMetodos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncaoMetodos(ADecFuncaoMetodos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecObjDecObj(ADecObjDecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVarRealDecVar(ADecVarRealDecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecConstanteRealDecCons(ADecConstanteRealDecCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInicializarInicializar(AInicializarInicializar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipoPrimitivo(ARealTipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoTipoPrimitivo(ABooleanoTipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoClasseTipoClasse(ATipoClasseTipoClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoPrimitivoTipo(ATipoPrimitivoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoClasseTipo(ATipoClasseTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncaoRealDecFuncao(ADecFuncaoRealDecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncaoBooleanaExpDecFuncao(ADecFuncaoBooleanaExpDecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcedComandoDecProced(AProcedComandoDecProced node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcedDecProced(AProcedDecProced node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeInicialComando(ASeInicialComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoComando(ASenaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComando(AAtribuicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamdaIdComando(AChamdaIdComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInicioBloco(AInicioBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtributosEstruturaBloco(AAtributosEstruturaBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoEstruturaBloco(AComandoEstruturaBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoEstruturaSenao(ASenaoEstruturaSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamaChamada(AChamaChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioListaListaExp(AVazioListaListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprListaExp(AExprListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpListaExp(AListaExpListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListasExpListasExp(AListasExpListasExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroNuloParametros(AParametroNuloParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroParametros(AParametroParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConjParametrosConjParametros(AConjParametrosConjParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorRealExp(AValorRealExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolVerdadeExp(ABoolVerdadeExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolFalsoExp(ABoolFalsoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdExp(AIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamdaIdExp(AChamdaIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtributoIdExp(AAtributoIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpreExp(AExpreExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegativoExp(ANegativoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADifExp(ADifExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpExp(AOpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExpExp(ABlocoExpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaChamadaOpcional(AChamadaChamadaOpcional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaOp(ASomaOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosOp(AMenosOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultOp(AMultOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivOp(ADivOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModOp(AModOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualdadeOp(AIgualdadeOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorQueOp(AMenorQueOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorIgualQueOp(AMenorIgualQueOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndOp(AAndOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuOp(AOuOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInicioConstBlocoExp(AInicioConstBlocoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtributoAtributo(AAtributoAtributo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroBoolParametro(AParametroBoolParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasse(TClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFilha(TFilha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOutput(TOutput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAmpersand(TAmpersand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoevirgula(TPontoevirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTObj(TObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicializacao(TInicializacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleano(TBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDecProcedimento(TDecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedimento(TProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFuncao(TFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdade(TVerdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdClasse(TIdClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualdade(TIgualdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorQue(TMenorQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgualQue(TMenorIgualQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioBloco(TComentarioBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazioNIgnorado(TVazioNIgnorado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
